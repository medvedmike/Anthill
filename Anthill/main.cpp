/*
	ћуравейник. “ипы объектов: матка, солдаты, полицейские, рабочие, личинки, вредители. 
	 аждый представиль €вл€етс€ отдельным экземпл€ром класса. 
	ћуравейник имеет склад пищи фиксированного размера. 
	ћатка создает личинки, из личинок вывод€тс€ солдаты, полицейские или рабочие муравьи и ест очень много, 
	солдаты уменьшают число вредителей и много ед€т, 
	полицейские помогают увеличить число добываемой пищи и ед€т меньше солдат, 
	рабочие добывают пищу и ед€т меньше полицейских, 
	личинки только ед€т. 
		ћатка имеет следующие параметры:
		Х	кол-во потребл€емой пищи;
		Х	кол-во рождаемых личинок.
		—олдаты имеют следующие параметры
		Х	кол-во потребл€емой пищи;
		Х	кол-во уничтожаемых вредителей.
		ѕолицейские имеютс€ следующие параметры:
		Х	кол-во потребл€емой пищи;
		Х	процент, на который увеличиваетс€ запас пищи.
		–абочие имеют следующие параметры:
		Х	кол-во потребл€емой пищи;
		Х	кол-во добываемой пищи.
		Ћичинки имеют только один параметр: 
		Х	кол-во потребл€емой пищи. 
	„ерез некоторое врем€ личинки должны разродитс€ в новую форму. 
	ѕри изменении формы личнки должны об этом сигнализировать матку, чтобы она определила тип, в который превратитс€ личинка. 
	ѕоказать работу муравейника дл€ различных значений числа муравьев, вредителей, пищи.
*/

#include <iostream>
#include <GL/glut.h>
#include "Log.h"
#include "Model/World.h"
#include "View/View.h"
#include <time.h>

#define WinWid 800
#define WinHei 800

View * view;

void InitLog()
{
	Log::Init();
	Log::SetLevel(DEBUG);
}

void InitializeView(int argc, char * argv[])
{
	view = new View();
	view->Initialize(argc, argv, WinWid, WinHei);
}

void InitializeModel()
{
	World::Instance().InitWorld(300);
}

void Start(int argc, char * argv[]) {
	InitLog();
	InitializeModel();
	InitializeView(argc, argv);
	Log::Message("Application started");
	view->Start();
	delete view;
}

int main(int argc, char * argv[])
{
	srand(time(NULL));
	Start(argc, argv);
	cin.ignore();
	Log::Message("Application closed");
	return 0;
}